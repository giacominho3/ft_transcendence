services:
  nginx:
    depends_on:
      - django
    build:
      context: ./nginx
    ports:
      - 8443:443
    volumes:
      - ./transcendence/ssl/:/etc/nginx/ssl
      - static_volume:/etc/nginx/static
    networks:
      - webnet
  
  my-postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: mypassword
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
      interval: 5s
      timeout: 2s
      retries: 5
      start_period: 5s
    networks:
      - webnet

  django:
    depends_on:
      my-postgres:
        condition: service_healthy
    build:
      context: ./transcendence
    # command: bash -c "python manage.py collectstatic --no-input && python manage.py runsslserver --certificate ./ssl/certcert.pem --key ./ssl/certkey.pem 0.0.0.0:8001"
    command: bash -c "../sh/wait_for_it.sh my-postgres:5432 -- python manage.py collectstatic --no-input && ../sh/admin.sh"
    ports:
      - 127.0.0.1:8001:8001
    volumes:
      # - ./transcendence/ssl/:/app/ssl
      - ./transcendence:/app/
      # - static_volume:/app/static
      - static_volume:/app/staticfiles
    env_file:
      - .env
    networks:
      - webnet

  redis:
    build:
      context: ./redis
    networks:
      - webnet


  daphne:
    depends_on:
      - redis
    build:
      context: ./daphne
    ports:
      - 8000:8000
    volumes:
      - ./transcendence/ssl/:/app/ssl
      - ./transcendence:/app/
    env_file:
      - .env
    networks:
      - webnet

volumes:
  static_volume:

networks:
  webnet:

# docker-compose.yml

# version: '3.9'

# services:
#   redis:
#     build:
#       context: ./redis
#     ports:
#       - "6379:6379"
